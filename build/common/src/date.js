"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.calcDate = exports.checkWeeklyDate = exports.changDateFormThreeHoursTime = exports.changDateFormMiniDust = exports.defaultTime = exports.defaultDate = void 0;

var _dayjs = _interopRequireDefault(require("dayjs"));

var _timezone = _interopRequireDefault(require("dayjs/plugin/timezone"));

var _utc = _interopRequireDefault(require("dayjs/plugin/utc"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_dayjs.default.extend(_utc.default);

_dayjs.default.extend(_timezone.default);

var defaultDate = function defaultDate() {
  var TODAY = (0, _dayjs.default)(new Date()).tz("Asia/Seoul");
  return TODAY.format("YYYYMMDD");
};

exports.defaultDate = defaultDate;

var defaultTime = function defaultTime() {
  var TODAY = (0, _dayjs.default)(new Date()).tz("Asia/Seoul");
  return TODAY.minute() < 45 ? TODAY.subtract(1, "hour").format("HHmm") : TODAY.format("HHmm");
};

exports.defaultTime = defaultTime;

var changDateFormMiniDust = function changDateFormMiniDust() {
  var TODAY = (0, _dayjs.default)(new Date()).tz("Asia/Seoul");
  var output = TODAY.subtract(3, "day").format("YYYY-MM-DD");
  return output;
};

exports.changDateFormMiniDust = changDateFormMiniDust;

var changDateFormThreeHoursTime = function changDateFormThreeHoursTime() {
  var TODAY = (0, _dayjs.default)(new Date()).tz("Asia/Seoul");
  var hours = parseInt(TODAY.format("HH"), 10);

  if (hours % 3 === 2) {
    var res = TODAY.format(3 * Math.floor(hours / 3) + 2 > 10 ? "".concat(3 * Math.floor(hours / 3) + 2, "00") : "0".concat(3 * Math.floor(hours / 3) + 2, "00"));
    return res.toString();
  } else {
    var _res = TODAY.format(3 * Math.floor(hours / 3) - 1 > 10 ? "".concat(3 * Math.floor(hours / 3) - 1, "00") : "0".concat(3 * Math.floor(hours / 3) - 1, "00"));

    return _res.toString();
  }
};

exports.changDateFormThreeHoursTime = changDateFormThreeHoursTime;

var checkWeeklyDate = function checkWeeklyDate() {
  var TODAY = (0, _dayjs.default)(new Date()).tz("Asia/Seoul");
  var date = TODAY.format("YYYYMMDD");
  var time = parseInt(TODAY.format("HH"), 10);
  return time >= 6 && time <= 17 ? "".concat(date, "0600") : "".concat(date, "1800");
};

exports.checkWeeklyDate = checkWeeklyDate;

var calcDate = function calcDate() {
  var TODAY = (0, _dayjs.default)(new Date()).tz("Asia/Seoul");
  var date = TODAY.format("YYYYMMDD");
  var time = parseInt(TODAY.format("HH"), 10);
  return time < 5 ? TODAY.subtract(1, "day").format("YYYYMMDD") : date;
};

exports.calcDate = calcDate;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21tb24vc3JjL2RhdGUudHMiXSwibmFtZXMiOlsiZGF5anMiLCJleHRlbmQiLCJ1dGMiLCJ0aW1lem9uZSIsImRlZmF1bHREYXRlIiwiVE9EQVkiLCJEYXRlIiwidHoiLCJmb3JtYXQiLCJkZWZhdWx0VGltZSIsIm1pbnV0ZSIsInN1YnRyYWN0IiwiY2hhbmdEYXRlRm9ybU1pbmlEdXN0Iiwib3V0cHV0IiwiY2hhbmdEYXRlRm9ybVRocmVlSG91cnNUaW1lIiwiaG91cnMiLCJwYXJzZUludCIsInJlcyIsIk1hdGgiLCJmbG9vciIsInRvU3RyaW5nIiwiY2hlY2tXZWVrbHlEYXRlIiwiZGF0ZSIsInRpbWUiLCJjYWxjRGF0ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOzs7O0FBRUFBLGVBQU1DLE1BQU4sQ0FBYUMsWUFBYjs7QUFDQUYsZUFBTUMsTUFBTixDQUFhRSxpQkFBYjs7QUFFTyxJQUFNQyxXQUFXLEdBQUcsU0FBZEEsV0FBYyxHQUFjO0FBQ3ZDLE1BQU1DLEtBQUssR0FBRyxvQkFBTSxJQUFJQyxJQUFKLEVBQU4sRUFBa0JDLEVBQWxCLENBQXFCLFlBQXJCLENBQWQ7QUFDQSxTQUFPRixLQUFLLENBQUNHLE1BQU4sQ0FBYSxVQUFiLENBQVA7QUFDRCxDQUhNOzs7O0FBS0EsSUFBTUMsV0FBVyxHQUFHLFNBQWRBLFdBQWMsR0FBYztBQUN2QyxNQUFNSixLQUFLLEdBQUcsb0JBQU0sSUFBSUMsSUFBSixFQUFOLEVBQWtCQyxFQUFsQixDQUFxQixZQUFyQixDQUFkO0FBQ0EsU0FBT0YsS0FBSyxDQUFDSyxNQUFOLEtBQWlCLEVBQWpCLEdBQXNCTCxLQUFLLENBQUNNLFFBQU4sQ0FBZSxDQUFmLEVBQWtCLE1BQWxCLEVBQTBCSCxNQUExQixDQUFpQyxNQUFqQyxDQUF0QixHQUFpRUgsS0FBSyxDQUFDRyxNQUFOLENBQWEsTUFBYixDQUF4RTtBQUNELENBSE07Ozs7QUFLQSxJQUFNSSxxQkFBcUIsR0FB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c0NvbnRlbnQiOlsiaW1wb3J0IGRheWpzIGZyb20gXCJkYXlqc1wiO1xuaW1wb3J0IHRpbWV6b25lIGZyb20gXCJkYXlqcy9wbHVnaW4vdGltZXpvbmVcIjtcbmltcG9ydCB1dGMgZnJvbSBcImRheWpzL3BsdWdpbi91dGNcIjtcblxuZGF5anMuZXh0ZW5kKHV0Yyk7XG5kYXlqcy5leHRlbmQodGltZXpvbmUpO1xuXG5leHBvcnQgY29uc3QgZGVmYXVsdERhdGUgPSAoKTogc3RyaW5nID0+IHtcbiAgY29uc3QgVE9EQVkgPSBkYXlqcyhuZXcgRGF0ZSgpKS50eihcIkFzaWEvU2VvdWxcIik7XG4gIHJldHVybiBUT0RBWS5mb3JtYXQoXCJZWVlZTU1ERFwiKTtcbn07XG5cbmV4cG9ydCBjb25zdCBkZWZhdWx0VGltZSA9ICgpOiBzdHJpbmcgPT4ge1xuICBjb25zdCBUT0RBWSA9IGRheWpzKG5ldyBEYXRlKCkpLnR6KFwiQXNpYS9TZW91bFwiKTtcbiAgcmV0dXJuIFRPREFZLm1pbnV0ZSgpIDwgNDUgPyBUT0RBWS5zdWJ0cmFjdCgxLCBcImhvdXJcIikuZm9ybWF0KFwiSEhtbVwiKSA6IFRPREFZLmZvcm1hdChcIkhIbW1cIik7XG59O1xuXG5leHBvcnQgY29uc3QgY2hhbmdEYXRlRm9ybU1pbmlEdXN0ID0gKCk6IHN0cmluZyA9PiB7XG4gIGNvbnN0IFRPREFZID0gZGF5anMobmV3IERhdGUoKSkudHooXCJBc2lhL1Nlb3VsXCIpO1xuICBjb25zdCBvdXRwdXQgPSBUT0RBWS5zdWJ0cmFjdCgzLCBcImRheVwiKS5mb3JtYXQoXCJZWVlZLU1NLUREXCIpO1xuICByZXR1cm4gb3V0cHV0O1xufTtcblxuZXhwb3J0IGNvbnN0IGNoYW5nRGF0ZUZvcm1UaHJlZUhvdXJzVGltZSA9ICgpOiBzdHJpbmcgPT4ge1xuICBjb25zdCBUT0RBWSA9IGRheWpzKG5ldyBEYXRlKCkpLnR6KFwiQXNpYS9TZW91bFwiKTtcbiAgY29uc3QgaG91cnMgPSBwYXJzZUludChUT0RBWS5mb3JtYXQoXCJISFwiKSwgMTApO1xuICBpZiAoaG91cnMgJSAzID09PSAyKSB7XG4gICAgY29uc3QgcmVzID0gVE9EQVkuZm9ybWF0KDMgKiBNYXRoLmZsb29yKGhvdXJzIC8gMykgKyAyID4gMTAgPyBgJHszICogTWF0aC5mbG9vcihob3VycyAvIDMpICsgMn0wMGAgOiBgMCR7MyAqIE1hdGguZmxvb3IoaG91cnMgLyAzKSArIDJ9MDBgKTtcbiAgICByZXR1cm4gcmVzLnRvU3RyaW5nKCk7XG4gIH0gZWxzZSB7XG4gICAgY29uc3QgcmVzID0gVE9EQVkuZm9ybWF0KDMgKiBNYXRoLmZsb29yKGhvdXJzIC8gMykgLSAxID4gMTAgPyBgJHszICogTWF0aC5mbG9vcihob3VycyAvIDMpIC0gMX0wMGAgOiBgMCR7MyAqIE1hdGguZmxvb3IoaG91cnMgLyAzKSAtIDF9MDBgKTtcbiAgICByZXR1cm4gcmVzLnRvU3RyaW5nKCk7XG4gIH1cbn07XG5cbmV4cG9ydCBjb25zdCBjaGVja1dlZWtseURhdGUgPSAoKSA9PiB7XG4gIGNvbnN0IFRPREFZID0gZGF5anMobmV3IERhdGUoKSkudHooXCJBc2lhL1Nlb3VsXCIpO1xuICBjb25zdCBkYXRlID0gVE9EQVkuZm9ybWF0KFwiWVlZWU1NRERcIik7XG5cbiAgY29uc3QgdGltZSA9IHBhcnNlSW50KFRPREFZLmZvcm1hdChcIkhIXCIpLCAxMCk7XG4gIHJldHVybiB0aW1lID49IDYgJiYgdGltZSA8PSAxNyA/IGAke2RhdGV9MDYwMGAgOiBgJHtkYXRlfTE4MDBgO1xufTtcblxuZXhwb3J0IGNvbnN0IGNhbGNEYXRlID0gKCkgPT4ge1xuICBjb25zdCBUT0RBWSA9IGRheWpzKG5ldyBEYXRlKCkpLnR6KFwiQXNpYS9TZW91bFwiKTtcbiAgY29uc3QgZGF0ZSA9IFRPREFZLmZvcm1hdChcIllZWVlNTUREXCIpO1xuICBjb25zdCB0aW1lID0gcGFyc2VJbnQoVE9EQVkuZm9ybWF0KFwiSEhcIiksIDEwKTtcblxuICByZXR1cm4gdGltZSA8IDUgPyBUT0RBWS5zdWJ0cmFjdCgxLCBcImRheVwiKS5mb3JtYXQoXCJZWVlZTU1ERFwiKSA6IGRhdGU7XG59O1xuIl19